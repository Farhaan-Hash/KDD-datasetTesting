# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from pcap_processor.grpc import WisdomGrpcService_pb2 as WisdomGrpcService__pb2


class WisdomStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
        """Constructor.

        Args:
          channel: A grpc.Channel.
        """
        self.send = channel.unary_unary(
            '/com.javahelps.wisdom.service.gprc.Wisdom/send',
            request_serializer=WisdomGrpcService__pb2.Event.SerializeToString,
            response_deserializer=WisdomGrpcService__pb2.Event.FromString,
        )
        self.feed = channel.stream_unary(
            '/com.javahelps.wisdom.service.gprc.Wisdom/feed',
            request_serializer=WisdomGrpcService__pb2.Event.SerializeToString,
            response_deserializer=WisdomGrpcService__pb2.Event.FromString,
        )
        self.receive = channel.unary_stream(
            '/com.javahelps.wisdom.service.gprc.Wisdom/receive',
            request_serializer=WisdomGrpcService__pb2.Event.SerializeToString,
            response_deserializer=WisdomGrpcService__pb2.Event.FromString,
        )


class WisdomServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def send(self, request, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def feed(self, request_iterator, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def receive(self, request, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_WisdomServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'send': grpc.unary_unary_rpc_method_handler(
            servicer.send,
            request_deserializer=WisdomGrpcService__pb2.Event.FromString,
            response_serializer=WisdomGrpcService__pb2.Event.SerializeToString,
        ),
        'feed': grpc.stream_unary_rpc_method_handler(
            servicer.feed,
            request_deserializer=WisdomGrpcService__pb2.Event.FromString,
            response_serializer=WisdomGrpcService__pb2.Event.SerializeToString,
        ),
        'receive': grpc.unary_stream_rpc_method_handler(
            servicer.receive,
            request_deserializer=WisdomGrpcService__pb2.Event.FromString,
            response_serializer=WisdomGrpcService__pb2.Event.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'com.javahelps.wisdom.service.gprc.Wisdom', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
